class CollisionSystem{constructor({collision_map:i,front_map:s},o,t){this.collision_map=i,this.front_map=s,this.app=o,this.PIXI=t,this.collision_canvas=null,this.collision_canvas_ctx=null,this.collision_shapes=["ellipse","rect"],this.directions=["walkN","walkNE","walkNW","walkS","walkSE","walkSW","walkE","walkW"],this.initCollisionMap()}initCollisionMap(){let i=this.app.renderer.plugins.extract;this.collision_canvas=i.canvas(this.collision_map),this.collision_canvas_ctx=this.collision_canvas.getContext("2d")}isCollision(i,s){let o=this.collision_map.toGlobal({x:i,y:s}),t=!1;for(let l of this.collision_map.children)if(l.containsPoint({x:o.x,y:o.y})){t=!0;break}let e=this.collision_canvas_ctx.getImageData(i,s,1,1).data[0];return!e||!!t}moveWithCollisions(i,s="",o={}){let t=this.directions.find(i=>i===s);if(!t)return;let l="number"==typeof o.marginTop?o.marginTop:30,e="number"==typeof o.marginBottom?o.marginBottom:10,n="number"==typeof o.marginRight?o.marginRight:30,a="number"==typeof o.marginLeft?o.marginLeft:30,p="number"==typeof o.speed?o.speed:5,r="number"==typeof o.stepXY?o.stepXY:p*app.ticker.deltaTime,c="number"==typeof o.stepD?o.stepD:.707*r;switch(s){case"walkNE":this.isCollision(i.position.x+l,i.position.y-l)||(i.position.y-=c,i.position.x+=r);break;case"walkNW":this.isCollision(i.position.x-l,i.position.y-l)||(i.position.x-=r,i.position.y-=c);break;case"walkN":this.isCollision(i.position.x,i.position.y-l)||(i.position.y-=r);break;case"walkSE":this.isCollision(i.position.x+e,i.position.y+e)||(i.position.x+=r,i.position.y+=c);break;case"walkSW":this.isCollision(i.position.x-e,i.position.y+e)||(i.position.y+=c,i.position.x-=r);break;case"walkS":this.isCollision(i.position.x,i.position.y+e)||(i.position.y+=r);break;case"walkE":this.isCollision(i.position.x+n,i.position.y)||(i.position.x+=r);break;case"walkW":this.isCollision(i.position.x-a,i.position.y)||(i.position.x-=r)}}createCollision(i,s={scaleX:0,scaleY:0,rotation:0,shape:"ellipse"}){let o=this.collision_shapes.find(i=>s.shape===i),t={scaleX:s.scaleX||0,scaleY:s.scaleY||0,rotation:s.rotation||0,shape:s.shape&&o?s.shape:"ellipse"},l=this.getCollisionBySprite(i);l||(l=new this.PIXI.Graphics,this.collision_map.addChild(l),i.on("removed",()=>this.removeCollision(i)),l.collision_system_params={sprite:i,...t},this.updateCollision(i,t))}updateCollision(i,s={}){let o=this.getCollisionBySprite(i);if(!o)return;let t=this.collision_shapes.find(i=>s.shape===i);o.collision_system_params.shape=s.shape&&t?s.shape:o.collision_system_params.shape,o.collision_system_params.scaleX="number"==typeof s.scaleX?s.scaleX:o.collision_system_params.scaleX,o.collision_system_params.scaleY="number"==typeof s.scaleY?s.scaleY:o.collision_system_params.scaleY,o.collision_system_params.rotation="number"==typeof s.rotation?s.rotation:o.collision_system_params.rotation;let{scaleX:l,scaleY:e,rotation:n,shape:a}=o.collision_system_params,p=i.width/2;o.clear(),o.beginFill("black"),"rect"===a?o.drawRect(i.position.x-(i.width+l)/2,i.position.y-(i.height+e)/2,i.width+l,i.height+e):o.drawEllipse(i.position.x,i.position.y,p+l,p/2+e),o.pivot.set(i.position.x,i.position.y),o.position.set(i.position.x,i.position.y),o.rotation=n,o.endFill()}removeCollision(i){let s=this.getCollisionBySprite(i);s&&(this.collision_map.removeChild(s),s.destroy(!0))}getCollisionOptions(i){let s=this.getCollisionBySprite(i);return s?{...s.collision_system_params}:null}getCollisionBySprite(i){return this.collision_map.children.find(s=>s.collision_system_params.sprite===i)}displayFrontMap(i){this.front_map.visible=i}}